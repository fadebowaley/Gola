name: CI/CD Pipeline

on:
  push:
    branches:
      - main            # Trigger this workflow on push to main branch
      - development      # Trigger this workflow on push to development branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3   # Updated to v3


      - name: Build Docker image
        run: docker build -t fadebowaley/proton:latest .

      - name: Push to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push fadebowaley/proton:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PEM key for EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_DEPLOY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan -H fadebowaley.xyz >> ~/.ssh/known_hosts
          ssh-keyscan -H staging.fadebowaley.xyz >> ~/.ssh/known_hosts

      - name: Ensure directory exists and clone repo if not present
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@fadebowaley.xyz << 'EOF'
            # Create directory if it doesn't exist
            if [ ! -d "/home/ubuntu/proton" ]; then
              mkdir -p /home/ubuntu/proton
              git clone https://github.com/fadebowaley/Gola.git /home/ubuntu/proton
            else
              cd /home/ubuntu/proton
              git pull origin main
            fi
          EOF

      - name: Copy docker-compose.yml to EC2 if not exists
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@fadebowaley.xyz << 'EOF'
            if [ ! -f "/home/ubuntu/proton/docker-compose.yml" ]; then
              scp -i ~/.ssh/id_rsa docker-compose.yml ubuntu@fadebowaley.xyz:/home/ubuntu/proton
            fi
          EOF

      - name: Copy Dockerfile to EC2 if not exists
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@fadebowaley.xyz << 'EOF'
            if [ ! -f "/home/ubuntu/proton/Dockerfile" ]; then
              scp -i ~/.ssh/id_rsa Dockerfile ubuntu@fadebowaley.xyz:/home/ubuntu/proton
            fi
          EOF
          


      - name: Deploy to Staging
        if: github.ref == 'refs/heads/development'
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@staging.fadebowaley.xyz << 'EOF'
            cd /home/ubuntu/proton
            export MONGO_URI="${{ secrets.MONGO_URI }}"
            export SESSION_SECRET="${{ secrets.SESSION_SECRET }}"
            export MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}"
            export MAIL_USERNAME="${{ secrets.MAIL_USERNAME }}"
            export MAIL_SERVER="${{ secrets.MAIL_SERVER }}"
            export MAIL_PORT="${{ secrets.MAIL_PORT }}"
            export ADMIN_EMAIL="${{ secrets.ADMIN_EMAIL }}"
            export DEFAULT_SENDER="${{ secrets.DEFAULT_SENDER }}"
            export ORDER_SENDER="${{ secrets.ORDER_SENDER }}"
            export ACTIVATE_SENDER="${{ secrets.ACTIVATE_SENDER }}"
            export FEEDBACK_EMAIL="${{ secrets.FEEDBACK_EMAIL }}"
            docker pull fadebowaley/proton:latest
            docker-compose up -d
          EOF

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@fadebowaley.xyz << 'EOF'
            cd /home/ubuntu/proton
            export MONGO_URI="${{ secrets.MONGO_URI }}"
            export SESSION_SECRET="${{ secrets.SESSION_SECRET }}"
            export MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}"
            export MAIL_USERNAME="${{ secrets.MAIL_USERNAME }}"
            export MAIL_SERVER="${{ secrets.MAIL_SERVER }}"
            export MAIL_PORT="${{ secrets.MAIL_PORT }}"
            export ADMIN_EMAIL="${{ secrets.ADMIN_EMAIL }}"
            export DEFAULT_SENDER="${{ secrets.DEFAULT_SENDER }}"
            export ORDER_SENDER="${{ secrets.ORDER_SENDER }}"
            export ACTIVATE_SENDER="${{ secrets.ACTIVATE_SENDER }}"
            export FEEDBACK_EMAIL="${{ secrets.FEEDBACK_EMAIL }}"
            docker pull fadebowaley/proton:latest
            docker-compose up -d
          EOF
